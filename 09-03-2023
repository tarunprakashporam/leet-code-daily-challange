// LEET CODE DAILY CHALLANGE 

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        ListNode*slow = head;
        ListNode*fast = head;
        
   if (head == nullptr || head->next == nullptr) {
            return nullptr;
        }


while( fast && fast->next ){
fast = fast->next->next;
slow = slow ->next;

if(fast == slow){
ListNode*start = head;

while(start != slow){
    slow = slow->next;
    start = start->next;
}
return start ;
}
}
return nullptr;
}
};
